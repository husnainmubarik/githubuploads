DeepLab(
  (backbone): AlignedXception(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace)
    (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (block1): Block(
      (skip): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (skipbn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): SeparableConv2d(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), groups=64, bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): SeparableConv2d(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), groups=128, bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace)
        (6): SeparableConv2d(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), groups=128, bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block2): Block(
      (skip): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (skipbn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): SeparableConv2d(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), groups=128, bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): SeparableConv2d(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), groups=256, bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace)
        (6): SeparableConv2d(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), groups=256, bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block3): Block(
      (skip): Conv2d(256, 728, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (skipbn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), groups=256, bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(2, 2), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block4): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block5): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block6): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block7): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block8): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block9): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block10): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block11): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block12): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block13): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block14): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block15): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block16): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block17): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block18): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block19): Block(
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block20): Block(
      (skip): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (skipbn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (rep): Sequential(
        (0): ReLU(inplace)
        (1): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace)
        (4): SeparableConv2d(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace)
        (7): SeparableConv2d(
          (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), groups=1024, bias=False)
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (conv3): SeparableConv2d(
      (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), dilation=(2, 2), groups=1024, bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (pointwise): Conv2d(1024, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn3): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv4): SeparableConv2d(
      (conv1): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), dilation=(2, 2), groups=1536, bias=False)
      (bn): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (pointwise): Conv2d(1536, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn4): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv5): SeparableConv2d(
      (conv1): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), dilation=(2, 2), groups=1536, bias=False)
      (bn): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (pointwise): Conv2d(1536, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn5): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (aspp): ASPP(
    (aspp1): _ASPPModule(
      (atrous_conv): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (aspp2): _ASPPModule(
      (atrous_conv): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (aspp3): _ASPPModule(
      (atrous_conv): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (aspp4): _ASPPModule(
      (atrous_conv): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (global_avg_pool): Sequential(
      (0): AdaptiveAvgPool2d(output_size=(1, 1))
      (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU()
    )
    (conv1): Conv2d(1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
    (dropout): Dropout(p=0.5)
  )
  (decoder): Decoder(
    (conv1): Conv2d(128, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
    (last_conv): Sequential(
      (0): Conv2d(304, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.5)
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU()
      (7): Dropout(p=0.1)
      (8): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
